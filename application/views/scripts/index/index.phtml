<br /><br />
<div id="view-content">
RGB is totally confusing - I mean, at least #C0FFEE should be brown, right?<br>
<?php 
$neuerBenutzer = new Application_Model_Benutzer();
$neuerBenutzer->setNachname('Brandmüller');
$neuerBenutzer->setVorname('Dennis');
$neuerBenutzer->setKlartextPasswort('geheim');
$neuerBenutzer->setBerechtigung('Administrator');
$neuerBenutzer->setAnrede('Herr');
$neuerBenutzer->setBestaetigt(1);

$lieferadresse = new Application_Model_Rechnungsadresse();
$lieferadresse->setFirma('Blubware');
$lieferadresse->setNachname($neuerBenutzer->getNachname());
$lieferadresse->setVorname($neuerBenutzer->getVorname());
$lieferadresse->setStrasse('Martin-Greif-Str. 24');
$lieferadresse->setPlz('83080');
$lieferadresse->setOrt('Oberaudorf');
$lieferadresse->setLand('Deutschland');
$lieferadresse->setAnrede($neuerBenutzer->getAnrede());

//$neuerBenutzer->insertLieferadresse($lieferadresse);

$benutzerMapper = new Application_Model_BenutzerMapper();
if(!$benutzerMapper->existEmail('dennis.brandmueller@stud.fh-rosenheim.de'))
	$benutzerMapper->insertBenutzer($neuerBenutzer, 'dennis.brandmueller@stud.fh-rosenheim.de');


$alterBenutzer = $benutzerMapper->getBenutzer('dennis.brandmueller@stud.fh-rosenheim.de');

//$alterBenutzer->setVorname("Blub");

//$benutzerMapper->updateBenutzer($alterBenutzer);




//$alterBenutzer->insertRechnungsadresse($lieferadresse);

//$benutzerMapper->updateBenutzer($alterBenutzer);

//$alterBenutzer = $benutzerMapper->getBenutzer('dennis.brandmueller@stud.fh-rosenheim.de');

$la = $alterBenutzer->getRechnungsadresse();


$la[0]->setVorname('Blub2');

//$alterBenutzer->deleteRechnungsadresse($la[0]);

$benutzerMapper->updateBenutzer($alterBenutzer);


// $la[0]->setStrasse('Sankt-Joseph-Spitalstr. 5');

//$benutzerMapper->updateBenutzer($alterBenutzer);
?>



 <?php
// echo "Einzelne Zeile per getBenutzer abrufen:<br>";
// echo $this->mustermann->getAnrede() ." ". $this->mustermann->getVorname() ." ". $this->mustermann->getNachname() ." ". "<br>".$this->mustermann->getEmail();
// ?>
<!-- <br><br><br> -->
 <?php 
// echo "Alle Benutzer per fetchAll abrufen:<br>";
// foreach($this->mustermaenner as $mustermann){
// echo $mustermann->getAnrede() ." ". $mustermann->getVorname() ." ". $mustermann->getNachname() ." ". "<br>".$mustermann->getEmail() . "<br><br>";
// }
// ?>


 <?php 
 $benutzerMapper = new Application_Model_BenutzerMapper();

 $test = $benutzerMapper->getBenutzer("test@test.de");
 echo '<br>'.$test->getAnrede().'<br>';
 
 $la = $test->getRechnungsadresse();
 //echo $la[0]->getFirma();
 
 $truefalse = $la[0] instanceof Application_Model_Lieferadresse ? true : false;
 
 if($truefalse)
 	echo "ist wahr";
 else
 	echo "ist falsch";
 
		
// $test->setPasswort("geheim");
// $benutzerMapper->updateBenutzer($test);


// // $test->setPasswort("maeh");
// // $test->setAnrede("Herr");



// // $benutzerMapper->updateBenutzer($test);

// //Benutzer einfügen

// // $testbenutzer = new Application_Model_Benutzer();
// // $testbenutzer->setAnrede("Frau");
// // $testbenutzer->setBerechtigung("Benutzer");
// // $testbenutzer->setNachname("Maier");
// // $testbenutzer->setVorname("Bob");
// // $testbenutzer->setPasswort("blub123");

// // $benutzerMapper->insertBenutzer($testbenutzer, "bob.maier2@email.de");

// //$benutzerMapper->deleteBenutzer($testbenutzer);

// if($benutzerMapper->existEmail("test@test.de")){
// 	echo "<br>email existiert<br>";
// }
// else{
// 	echo "<br>email existiert nicht<br>";
// }

// //Wärmetauscher Tests:

// $waermetauscher = new Application_Model_Waermetauscher();

// $waermetauscher->setModel("test");

// echo $waermetauscher->getModel();
echo '<br><br><br>';
echo '-------------------------------------------------------------------------------------<br>';
echo 'Wärmetauscher:<br>';
 $waermetauschermapper = new Application_Model_WaermetauscherMapper();
 echo 'Modelliste:<br>';
//  print_r($waermetauschermapper->getModelList());
 foreach($waermetauschermapper->getModelListe() as $value){
 	echo $value.'<br>';
 }
 echo '<br>';
 
 
 
 foreach($waermetauschermapper->getAnschlussListe() as $value){
 	echo $value.'<br>';
 }
 echo '<br>';
 
 foreach($waermetauschermapper->getEinsatzgebietListe() as $value){
 	echo $value.'<br>';
 }
 echo '<br>';
 
 
 $bhd21 = $waermetauschermapper->getWaermetauscherByModel("BHD30");
 if(!($bhd21 = $waermetauschermapper->getWaermetauscherByModel("BHD21")))
 	echo "bhd21 anfrage fehlgeschlagen";
 else {
 	echo '<br>'.$bhd21->getStutzenmaterial();
 	echo '<br>'.$bhd21->getArtikelnummer();
 }

 $blub = $bhd21->getWaermetauscherUnterkategorie();
// foreach($blub as $key){
// echo "<br>blub<br>";
// }
 echo "<br>".$blub[1]->getLaenge().'<br>';
 echo "<br>".$blub[1]->getWaermetauscher_id();
 
 $bla = $bhd21->getWaermetauscherEinsatzgebiet();
 
 echo "<br>".$bla[0]->getEinsatzgebiet();

 echo '<br>-------------------------------------------------------------------------------------';
 echo '<br><br><br>';
 
 echo 'LinkMapper<br>';
 
 $linkMapper = new Application_Model_LinkMapper();

  $fall = $linkMapper->getLinkByHexaString("asdfasdfsd54f4sdaf564sd6f");

  echo $fall->getHexaString().'<br>';

  echo $fall->getEmail().'<br>';

 
 echo "<br>Eingegebene Argumente:<br>TemperaturMax: 200<br>TemperaturMin: 100<br>Einsatzgebiet: Umrüsten von PKW`s auf Rapsöl<br>
 		HöheMax: 450<br>HöheMin: 100<br>BreiteMax:150<br>BreiteMin: 401<br><br>";
 $wtmapper = new Application_Model_WaermetauscherMapper();
 
 $wtmapper->setTemperaturMax(200);
 $wtmapper->setTemperaturMin(100);
 //$wtmapper->setEinsatzgebiet('Umrüstung von PKW`s auf Rapsöl');
 $wtmapper->setAnschluss(array('3/8" IG', '1/2" AG', '3/4" AG'));
 $wtmapper->setHoeheMax(450);
 $wtmapper->setHoeheMin(100);
 $wtmapper->setBreiteMax(150);
 $wtmapper->setBreiteMin(10);
  $produkt = $wtmapper->getWaermetauscher();
  
  echo '<br><br><br>';
  echo '-------------------------------------------------------------------------------------<br>';
  foreach($produkt as $value){
	echo '<br>'.$value->getModel().'<br>';
	echo '<br>'.$value->getStutzenmaterial().'<br>';

}	
//  if($produkt != ""){
//  	foreach($produkt as $key => $value){
// 		echo $value->getModel().'<br>';
// 		echo $value->getTemperatur().'<br>';
// 	}
//  }
 
//
 echo '<br>-------------------------------------------------------------------------------------';
 echo '<br><br><br>';
 
 echo 'Pufferspeicher<br>';
 
 $psMapper = new Application_Model_PufferspeicherMapper();
 
 foreach($psMapper->getEinsatzgebietListe() as $value) {
		echo $value.'<br>';
}
 
 $vvx200 = $psMapper->getPufferspeicherById(1);		//ByModel('VVX200')
 
 $gebiet = $vvx200->getEinsatzgebiet();
 
 echo $gebiet[0]->getEinsatzgebiet().'<br>';
 
 echo $vvx200->getModel();
 
 
 echo '<br>-------------------------------------------------------------------------------------';
 echo '<br><br><br>';
 
 echo 'Angebote<br>';
 
 $angebotMapper = new Application_Model_AngebotskorbMapper();
 
 $angebotskorb = $angebotMapper->getAngebotskorbByEmail('"test@test.de');
 
 $angebot = $angebotskorb[0]->getAngebot();
 echo $angebot[0]->getStatus();
 
 
 echo '<br>-------------------------------------------------------------------------------------';
 echo '<br><br><br>';
 
 echo 'Artikel<br>';
 $artikelMapper = new Application_Model_ArtikelMapper();
 
 $artikel = $artikelMapper->getArtikelByArtikelnummer(2);
 
 //print_r($artikel);
 echo $artikel->getModel();
 
 echo $artikel instanceof Application_Model_Waermetauscher ? "ist wärmetauscher" : "ist pufferspeicher";
 ?>



<!-- </div> -->
